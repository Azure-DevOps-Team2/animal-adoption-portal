name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      GitHubPackageFeedUrl: https://nuget.pkg.github.com/Azure-DevOps-Team2/index.json
      LogicProjectPath: ${{ github.WORKSPACE }}/AnimalAdoption.Common.Logic
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
        source-url: ${{ env.GitHubPackageFeedUrl }}
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub automatically creates a GITHUB_TOKEN secret to use in your workflow

    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test AnimalAdoption.Web.Portal.UnitTests\\AnimalAdoption.Web.Portal.UnitTests.csproj --no-build --verbosity normal
    - name: Package up project
      run: dotnet pack --configuration Release ${{ env.LogicProjectPath }}

    - name: Push package to GitHub registry
      run: dotnet nuget push ${{ env.LogicProjectPath }}/**/*.nupkg --skip-duplicate
    - name: Publish
      run: dotnet publish --no-build

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.2
      with:
    # Artifact name
        name: animal-adoption-portal
        path: 
          /home/runner/work/animal-adoption-portal/animal-adoption-portal/AnimalAdoption.Web.Portal/bin/Debug/netcoreapp3.1/publish/
 # Set these variables at either the step or workflow level
 
  release:
    runs-on: ubuntu-latest
  # env:
  
    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2.0.8
      with:
        # Artifact name
        name: animal-adoption-portal
        # Destination path
        # path: # optional
    - name: Azure WebApp
      uses: Azure/webapps-deploy@v2
      with:
        # Name of the Azure Web App
        app-name: team2-app01
        # Applies to Web Apps(Windows and Linux) and Web App Containers(linux). Multi container scenario not supported. Publish profile (*.publishsettings) file contents with Web Deploy secrets
        publish-profile: ${{ secrets.PUBLISH_PROFILE }}
        # Enter an existing Slot other than the Production slot
        # package: # optional, default is .
        # Applies to Web App Containers only: Specify the fully qualified container image(s) name. For example, 'myregistry.azurecr.io/nginx:latest' or 'python:3.7.2-alpine/'. For multi-container scenario multiple container image names can be provided (multi-line separated)




