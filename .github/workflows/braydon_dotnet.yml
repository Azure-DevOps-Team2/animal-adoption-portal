name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      GitHubPackageFeedUrl: https://nuget.pkg.github.com/Azure-DevOps-Team2/index.json
      LogicProjectPath: ${{ github.WORKSPACE }}/AnimalAdoption.Common.Logic
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
        source-url: ${{ env.GitHubPackageFeedUrl }}
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub automatically creates a GITHUB_TOKEN secret to use in your workflow

    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test AnimalAdoption.Web.Portal.UnitTests\\AnimalAdoption.Web.Portal.UnitTests.csproj --no-build --verbosity normal
    - name: Package up project
      run: dotnet pack --configuration Release ${{ env.LogicProjectPath }}

    - name: Push package to GitHub registry
      run: dotnet nuget push ${{ env.LogicProjectPath }}/**/*.nupkg --skip-duplicate
    - name: Publish
      run: dotnet publish --no-build

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.2
      with:
    # Artifact name
        name: animal-adoption-portal
        path: 
          /home/runner/work/animal-adoption-portal/animal-adoption-portal/AnimalAdoption.Web.Portal/bin/Debug/netcoreapp3.1/publish/
          
    - name: Upload a ARM template
      uses: actions/upload-artifact@v2.2.2
      with:
    # Artifact name
        name: ARM-template
        path: 
          ARM Temaplate.json
  # Set these variables at either the step or workflow level
 
  release:
    if: github.ref == 'refs/heads/master'
    needs: build
    runs-on: ubuntu-latest
  # env:
  
    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2.0.8
      with:
        # Artifact name
        name: animal-adoption-portal
        # Destination path
        # path: # optional
        
    - name: Download ARM template
      uses: actions/download-artifact@v2.0.8
      with:
        # Artifact name
        name: ARM-template
        # Destination path
        # path: # optional
        
    - uses: azure/login@v1
      with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
    - name: Deploy Azure Resource Manager (ARM) Template
      uses: Azure/arm-deploy@v1
      with:
        # Provide the scope of the deployment. Valid values are: 'resourcegroup', 'managementgroup', 'subscription'
        scope: resourcegroup
        region: southeastasia
        # Provide the name of a resource group, only required for resource Group deployments.
        resourceGroupName: DevOps-2021-03-18-team-02-dev
        # Specify the path or URL to the Azure Resource Manager template.
        template: "./ARM Temaplate.json"
        # Incremental (only add resources to resource group) or Complete (remove extra resources from resource group) or Validate (only validates the template).
        deploymentMode: Incremental
        # Specifies the name of the resource group deployment to create.
        # deploymentName: 
        # Supply deployment parameter values.
        parameters: 
          resourceLocation=southeastasia 
          tenantGuid=ab5eb3d0-6067-40ee-b4c0-a2ce05dbf039
          appServicePlanName=team2-arm-default
          keyVaultName=animal-vault-default
          webAppName=team2-app-default
          resourceGroupServicePrincipalManagedApplicationObjectId=5f94f1f9-b182-4866-924c-cfbc17528b35
          
    - name: Azure WebApp
      uses: Azure/webapps-deploy@v2
      with:
        # Name of the Azure Web App
        app-name: team2-app01
        # Applies to Web Apps(Windows and Linux) and Web App Containers(linux). Multi container scenario not supported. Publish profile (*.publishsettings) file contents with Web Deploy secrets
        # publish-profile: ${{ secrets.PUBLISH_PROFILE }}
        # Enter an existing Slot other than the Production slot
        # package: # optional, default is .
        # Applies to Web App Containers only: Specify the fully qualified container image(s) name. For example, 'myregistry.azurecr.io/nginx:latest' or 'python:3.7.2-alpine/'. For multi-container scenario multiple container image names can be provided (multi-line separated)

    - name: Azure key vault - Get Secrets
      uses: Azure/get-keyvault-secrets@v1
      with:
        # Name of the azure key vault
        keyvault: animal-vault-default
        # Name of the secret to be fetched
        secrets: GlobalPassword
        
    - name: Azure App Service Settings
      uses: Azure/appservice-settings@v1
      with:
        # Name of the Azure Web App
        app-name: team2-app01
        # Name of an existing slot other than the production slot. Default value is production
        app-settings-json: '[ { "name": "GlobalPassword", "value": "${{env.GlobalPassword}}", "slotSetting": true } ]'
        
    

